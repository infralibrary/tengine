name: $(SourceBranchName)-$(tag)-$(Date:yyyyMMdd)$(Rev:.r)

trigger: none
pr: none

resources:
- repo: self

variables:
- group: build
- name: tag
  value: 2.3.3

stages:
- stage: Build
  displayName: Build
  jobs:
  - job: Build
    displayName: Build
    pool:
      name: Default
    steps:
    - checkout: self
      clean: true
    - bash: |
          docker system prune -a -f
      displayName: Clean Docker
      enabled: "true"
    - task: Bash@3
      displayName: Build image
      enabled: "true"
      inputs:
        targetType: 'inline'
        script: |
          #!/bin/bash
          docker build --no-cache --file mainline/alpine3.12/Dockerfile -t $(DOCKER_REGISTRY_URL)/infralibrary/tengine:$(tag)-alpine3.12 \
                                                                        -t $(ALIYUN_REGISTRY_URL)/infralibrary/tengine:$(tag)-alpine3.12 . 
                                                         
          docker build --no-cache --file mainline/alpine3.14/Dockerfile -t $(DOCKER_REGISTRY_URL)/infralibrary/tengine:$(tag)-alpine3.14 \
                                                                        -t $(DOCKER_REGISTRY_URL)/infralibrary/tengine:$(tag)-alpine \
                                                                        -t $(DOCKER_REGISTRY_URL)/infralibrary/tengine:$(tag) \
                                                                        -t $(DOCKER_REGISTRY_URL)/infralibrary/tengine:latest \
                                                                        -t $(ALIYUN_REGISTRY_URL)/infralibrary/tengine:$(tag)-alpine3.14 \
                                                                        -t $(ALIYUN_REGISTRY_URL)/infralibrary/tengine:$(tag)-alpine \
                                                                        -t $(ALIYUN_REGISTRY_URL)/infralibrary/tengine:$(tag) \
                                                                        -t $(ALIYUN_REGISTRY_URL)/infralibrary/tengine:latest .
          docker images 
    - task: Bash@3
      displayName: Registry Login
      enabled: "true"
      inputs:
        targetType: 'inline'
        script: |
          #!/bin/bash
          docker login -u $(DOCKER_REGISTRY_USERNAME) -p $(DOCKER_REGISTRY_PASSWORD)
          docker login $(ALIYUN_REGISTRY_URL) -u $(ALIYUN_REGISTRY_USERNAME) -p $(ALIYUN_REGISTRY_PASSWORD)
    - task: Bash@3
      displayName: Push image
      enabled: "true"
      inputs:
        targetType: 'inline'
        script: |
          #!/bin/bash
          for reg in $(DOCKER_REGISTRY_URL) $(ALIYUN_REGISTRY_URL);
          do
            docker push ${reg}/infralibrary/tengine:$(tag)-alpine3.12
            docker push ${reg}/infralibrary/tengine:$(tag)-alpine3.14
            docker push ${reg}/infralibrary/tengine:$(tag)-alpine
            docker push ${reg}/infralibrary/tengine:$(tag)
            docker push ${reg}/infralibrary/tengine:latest
          done
    - task: Bash@3
      displayName: Delete image
      enabled: "true"
      inputs:
        targetType: 'inline'
        script: |
          #!/bin/bash
          for reg in $(DOCKER_REGISTRY_URL) $(ALIYUN_REGISTRY_URL);
          do
            docker rmi -f ${reg}/infralibrary/tengine:$(tag)-alpine3.12
            docker rmi -f ${reg}/infralibrary/tengine:$(tag)-alpine3.14
            docker rmi -f ${reg}/infralibrary/tengine:$(tag)-alpine
            docker rmi -f ${reg}/infralibrary/tengine:$(tag)
            docker rmi -f ${reg}/infralibrary/tengine:latest
          done
